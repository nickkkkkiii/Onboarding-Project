function getRoleColor(role) {
  switch (role) {
    case "–î–∏—Ä–µ–∫—Ç–æ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏":
      return "red-badge";
    case "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è":
      return "yellow-badge";
    case "–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä":
      return "green-badge";
    default:
      return "blue-badge";
  }
}

function toggleEmployeeCard(element) {
  const card = element.closest('.employee-card');
  const details = card.querySelector('.employee-details');
  const icon = card.querySelector('.toggle-icon'); // –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∫–æ–Ω–∫–∞

  if (details.style.display === 'none') {
    details.style.display = 'block';
    if (icon) icon.style.transform = 'rotate(180deg)';
  } else {
    details.style.display = 'none';
    if (icon) icon.style.transform = 'rotate(0deg)';
  }
}

function goBack() {
  const lastSource = localStorage.getItem('lastSource');

  if (lastSource === 'from-project-list') {
    showProjectList();
  } else if (lastSource === 'from-employees') {
    showEmployees();
  } else {
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    showWelcomeScreen();
  }
}

function setThemeToggleState(isDark) {
  const themeToggle = document.getElementById('theme-toggle');
  if (themeToggle) {
    themeToggle.checked = isDark;
  }
}

function getSavedTheme() {
  return localStorage.getItem('darkMode') === 'true';
}

function loadTheme() {
  const isDark = localStorage.getItem('darkMode') === 'true';
  if (isDark) {
    document.body.classList.add('dark-mode');
  }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
function toggleDarkMode() {
  document.body.classList.toggle('dark-mode');
  const isDark = document.body.classList.contains('dark-mode');
  localStorage.setItem('darkMode', isDark);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Ç–µ–º—É –∏–ª–∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
function getProjectIdFromUrl() {
  const params = new URLSearchParams(window.location.search);
  return params.get("project");
}

function showWelcomeScreen() {
  const isDark = getSavedTheme();
  document.getElementById("app").innerHTML = `
    <div class="container">
      <div class="header-buttons">
        <h5>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü–†–ö–ü!</h5>
        <div class="theme-switch-container">
          <label class="theme-switch">
            <input type="checkbox" id="theme-toggle" onclick="toggleDarkMode()" ${isDark ? 'checked' : ''}>
            <div class="slider round"></div>
          </label>
        </div>
      </div>
      <div class="breadcrumbs">
        <span>–ì–ª–∞–≤–Ω–∞—è</span>
      </div>
      <div class="card">
        <h2>–í—ã–±–µ—Ä–∏ –ø—Ä–æ–µ–∫—Ç!</h2>
        <p>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: —Å—Å—ã–ª–∫–∏, –∫–æ–Ω—Ç–∞–∫—Ç—ã, FAQ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.</p>
        <button onclick="showProjectList()">–í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç</button>
        <div class="button-spacing"></div>
        <button onclick="showEmployees()">–í—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</button>
      </div>
    </div>
    <div class="footer-text">–ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –ø—É—Ç–µ–π</div>
  `;

  setThemeToggleState(isDark);
}

function showProjectList() {
  const isDark = getSavedTheme();
  const listHtml = Object.keys(projectData).map(id => {
    const name = projectData[id].name;
    return `<li>
  <button class="project-button" onclick="showProject('${id}', 'from-project-list')">${name}</button>
  </li>`;
  }).join("");
  
  document.getElementById("app").innerHTML = `
    <div class="container">
     <div class="header-buttons">
        <button onclick="showWelcomeScreen()" style="margin-right: 10px;">–ù–∞–∑–∞–¥</button>
        <label class="theme-switch">
          <input type="checkbox" id="theme-toggle" onclick="toggleDarkMode()">
          <div class="slider round"></div>
        </label>
      </div>
      <div class="breadcrumbs">
        <a href="#" onclick="showWelcomeScreen()">–ì–ª–∞–≤–Ω–∞—è</a> ‚Üí 
        <span>–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</span>
      </div>
      <div class="card">
        <h1>–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</h1>
        <ul>
          ${listHtml}
        </ul>
      </div>
    </div>
    <div class="footer-text">–ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –ø—É—Ç–µ–π</div>
  `;

  setThemeToggleState(isDark);
}

function showProject(id, source) {
  const project = projectData[id];
  if (!project) {
    document.getElementById("app").innerHTML = "<p>–ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.</p>";
    return;
  }

  const isDark = getSavedTheme();
  
  localStorage.setItem('lastSource', source);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –æ—Ç–∫—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à—ë–ª
  let breadcrumbsHtml = '';

  if (source === 'from-project-list') {
    // –ü—É—Ç—å: –ì–ª–∞–≤–Ω–∞—è ‚Üí –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã ‚Üí [–ü—Ä–æ–µ–∫—Ç]
    breadcrumbsHtml = `
      <div class="breadcrumbs">
        <a href="#" onclick="showWelcomeScreen()">–ì–ª–∞–≤–Ω–∞—è</a> ‚Üí 
        <a href="#" onclick="showProjectList()">–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</a> ‚Üí 
        <span>${project.name}</span>
      </div>
    `;
  } else if (source === 'from-employees') {
    // –ü—É—Ç—å: –ì–ª–∞–≤–Ω–∞—è ‚Üí –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ ‚Üí [–ü—Ä–æ–µ–∫—Ç]
    breadcrumbsHtml = `
      <div class="breadcrumbs">
        <a href="#" onclick="showWelcomeScreen()">–ì–ª–∞–≤–Ω–∞—è</a> ‚Üí 
        <a href="#" onclick="showEmployees()">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</a> ‚Üí 
        <span>${project.name}</span>
      </div>
    `;
  } else {
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É—Ç—å
    breadcrumbsHtml = `
      <div class="breadcrumbs">
        <a href="#" onclick="showWelcomeScreen()">–ì–ª–∞–≤–Ω–∞—è</a> ‚Üí 
        <a href="#" onclick="showProjectList()">–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</a> ‚Üí 
        <span>${project.name}</span>
      </div>
    `;
  }

  let html = `
    <div class="container">
      <div class="header-buttons">
        <button onclick="goBack()" style="margin-right: 10px;">–ù–∞–∑–∞–¥</button>
        <label class="theme-switch">
          <input type="checkbox" id="theme-toggle" onclick="toggleDarkMode()" ${isDark ? 'checked' : ''}>
          <div class="slider round"></div>
        </label>
      </div>

      <div class="breadcrumbs">
        <a href="#" onclick="showWelcomeScreen()">–ì–ª–∞–≤–Ω–∞—è</a> ‚Üí 
        <a href="#" onclick="showProjectList()">–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã</a> ‚Üí 
        <span>${project.name}</span>
      </div>

      <div class="card">
        <h1>${project.name}</h1>

        <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π -->
        <div class="project-details-container">
          <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${project.description}</p>

          <h3>üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏</h3>
          <ul>
            ${project.links.map(link => `<li><a href="${link.url}" target="_blank">${link.title}</a></li>`).join("")}
          </ul>

          <h3>üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã</h3>
          <ul>
            ${project.contacts.map(contact => `<li><b>${contact.name}</b> (${contact.role}): ${contact.telegram}</li>`).join("")}
          </ul>

          <h3>‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h3>
          <dl>
            ${project.faq.map(faq => `<dt>${faq.q}</dt><dd>${faq.a}</dd>`).join("")}
          </dl>
        </div>
      </div>
    </div>
    <div class="footer-text">–ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –ø—É—Ç–µ–π</div>
  `;

  document.getElementById("app").innerHTML = html;
  setThemeToggleState(isDark);
}

function showEmployees() {
  const isDark = getSavedTheme();

  let html = `
    <div class="container">
      <div class="header-buttons">
        <button onclick="showWelcomeScreen()" style="margin-right: 10px;">–ù–∞–∑–∞–¥</button>
        <label class="theme-switch">
          <input type="checkbox" id="theme-toggle" onclick="toggleDarkMode()" ${isDark ? 'checked' : ''}>
          <div class="slider round"></div>
        </label>
      </div>

      <div class="breadcrumbs">
        <a href="#" onclick="showWelcomeScreen()">–ì–ª–∞–≤–Ω–∞—è</a> ‚Üí 
        <span>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</span>
      </div>

      <div class="card">
        <h1>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</h1>
        <p>–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏:</p>

        <div class="employees-list">
  `;

  employees.forEach(emp => {
    const roleName = emp.role; // –ù–µ –¥–µ–ª–∞–µ–º uppercase, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ
    const roleColor = getRoleColor(roleName);

    const projectName = emp.project ? projectData[emp.project]?.name || "–ë–µ–∑ –ø—Ä–æ–µ–∫—Ç–∞" : "–ë–µ–∑ –ø—Ä–æ–µ–∫—Ç–∞";
    const projectId = emp.project ? emp.project : null;

    const projectLink = projectId
      ? `<a href="#" onclick="showProject('${projectId}', 'from-employees')">${projectName}</a>`
      : `–ë–µ–∑ –ø—Ä–æ–µ–∫—Ç–∞`;

    html += `
      <div class="employee-card" onclick="toggleEmployeeCard(this)">
        <div class="role-badge ${roleColor}">${roleName}</div>
        
        <div class="employee-header">
          <strong>${emp.name}</strong>
          
          <span class="toggle-icon">
            <svg viewBox="0 0 24 24" width="20" height="20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M5 12L12 19L19 12" stroke="#888" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </span>
        </div>

        <div class="employee-details" style="display: none;">
          <div><strong>–†–æ–ª—å:</strong> ${emp.role}</div>
          <div><strong>–ü—Ä–æ–µ–∫—Ç:</strong> ${projectLink}</div>
          <div><strong>Telegram:</strong> <a href="${emp.telegram}">${emp.telegram}</a></div>
        </div>
      </div>
    `;
  });

  html += `
        </div>
      </div>
    </div>
    <div class="footer-text">–ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –ø—É—Ç–µ–π</div>
  `;

  document.getElementById("app").innerHTML = html;
  setThemeToggleState(isDark);
}

(function initApp() {
  const projectId = getProjectIdFromUrl();
  if (projectId && projectData[projectId]) {
    showProject(projectId);
  } else {
    showWelcomeScreen();
  }
  loadTheme();
})();
